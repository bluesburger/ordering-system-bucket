name: Terraform Bucket S3 Pipeline

on:
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

permissions:
  pull-requests: write

jobs:
  plan-prod:
    name: 'Terraform Plan for Production'
    runs-on: ubuntu-latest
    env:
      TF_WORKING_DIR: '.'

    defaults:
      run:
        shell: bash
        working-directory: ${{ env.TF_WORKING_DIR }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: TF_LOG=DEBUG terraform plan -no-color 
        continue-on-error: true

      - name: Update GitHub Comment
        if: github.event_name == 'workflow_dispatch'  # Only run if manually triggered
        run: |
          # 1. Retrieve existing bot comments for the PR
          comments=$(curl -s -H "Authorization: token ***" \
            "https://api.github.com/repos/bluesburger/ordering-system-bucket/issues/d3a614067cd9b6f3a8f432ffcb88ed27ce0da264/comments")
          
          botCommentId=$(echo "$comments" | jq -r '.[] | select(.user.login == "github-actions[bot]" and .body | contains("Terraform Format and Style")) | .id')
          
          # 2. Prepare format of the comment
          output="#### Terraform Format and Style 🖌\`success\`
          #### Terraform Initialization ⚙️\`success\`
          #### Terraform Validation 🤖\`success\`
          <details><summary>Validation Output</summary>
          \`\`\`\n
          Success! The configuration is valid.
          
          
          \`\`\`
          </details>
          #### Terraform Plan 📖\`success\`
          <details><summary>Show Plan</summary>
          \`\`\`\n
          
          Terraform used the selected providers to generate the following execution
          plan. Resource actions are indicated with the following symbols:
            + create
          
          Terraform will perform the following actions:
          
            # aws_s3_bucket.bucket will be created
            + resource "aws_s3_bucket" "bucket" {
                + acceleration_status         = (known after apply)
                + acl                         = (known after apply)
                + arn                         = (known after apply)
                + bucket                      = "ordering-systems3"
                + bucket_domain_name          = (known after apply)
                + bucket_prefix               = (known after apply)
                + bucket_regional_domain_name = (known after apply)
                + force_destroy               = false
                + hosted_zone_id              = (known after apply)
                + id                          = (known after apply)
                + object_lock_enabled         = (known after apply)
                + policy                      = (known after apply)
                + region                      = (known after apply)
                + request_payer               = (known after apply)
                + tags_all                    = {
                    + "maneged-by" = "terraform"
                  }
                + website_domain              = (known after apply)
                + website_endpoint            = (known after apply)
              }
          
            # aws_s3_bucket_versioning.versioning will be created
            + resource "aws_s3_bucket_versioning" "versioning" {
                + bucket = (known after apply)
                + id     = (known after apply)
          
                + versioning_configuration {
                    + mfa_delete = (known after apply)
                    + status     = "Enabled"
                  }
              }
          
          Plan: 2 to add, 0 to change, 0 to destroy.
          
          Changes to Outputs:
            + s3_arn = (known after apply)
            + s3_id  = (known after apply)
          
          ─────────────────────────────────────────────────────────────────────────────
          
          Note: You didn't use the -out option to save this plan, so Terraform can't
          guarantee to take exactly these actions if you run "terraform apply" now.
          
          \`\`\`
          </details>
          *Pusher: @Fernando-Pozo, Action: \`workflow_dispatch\`, Working Directory: \`.\`, Workflow: \`Terraform Bucket S3 Pipeline\`*"
          
          # 3. If we have a comment, update it, otherwise create a new one
          if [ -n "$botCommentId" ]; then
            curl -X PATCH -H "Authorization: token ***" \
              -H "Content-Type: application/json" \
              -d "{\"body\":\"$output\"}" \
              "https://api.github.com/repos/bluesburger/ordering-system-bucket/issues/comments/$botCommentId"
          else
            curl -X POST -H "Authorization: token ***" \
              -H "Content-Type: application/json" \
              -d "{\"body\":\"$output\"}" \
              "https://api.github.com/repos/bluesburger/ordering-system-bucket/issues/d3a614067cd9b6f3a8f432ffcb88ed27ce0da264/comments"
          fi
